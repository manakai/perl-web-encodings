=head1 NAME

Web::Encoding - Web Encodings APIs

=head1 DESCRIPTION

This module is a placeholder for Perl APIs for handling Web Encodings.
This module is work in progress; its interface might or might not be
changed later.

=head1 FUNCTIONS

Following functions are exported by C<use>ing the C<Web::Encoding>
module:

=over 4

=item $key = encoding_label_to_name $label

Find the encoding identified by the specified label.  As does Encoding
Standard's "get an encoding" steps, this function ignores leading and
trailing spaces, and compares labels ASCII case-insensitively.  The
function returns the encoding key (not a name), if found, or C<undef>.

=item $key = fixup_html_meta_encoding_name $key

Replace a encoding key for the purpose of HTML character encoding
declaration, as in "prescan a byte stream to determine its encoding"
and "change the encoding" algorithms.  The argument must be an
encoding key (not a name or label).  The function returns an encoding
key.

=item $key = get_output_encoding_key $key

Return the result of applying the steps to get an output encoding.
The argument must be an encoding key (not a name or label).  The
function returns an encoding key.

=item $name = encoding_name_to_compat_name $key

Replace an encoding key to its official name as used in e.g.
C<characterSet> or C<inputEncoding> attributes of the C<Document>
interface.  The argument must be an encoding key (not a name or
label).  The function returns an encoding name.

=item $boolean = is_ascii_compat_encoding_name $key

Return whether the specified encoding is an ASCII-compatible character
encoding or not.  The argument must be an encoding key (not a name or
label).

=item $boolean = is_encoding_label $label

Return whether the specified label identifies an encoding or not.  It
compares labels ASCII case-insensitively.  Unlike the
C<encoding_label_to_name> function, however, this function does not
ignore spaces.

=item $key = locale_default_encoding_name $tag

Return the encoding key (not a name or label) of the default character
encoding for a locale.  If no default is known for the specified
locale, C<undef> is returned.

The argument, which identifies the locale, must be either a BCP 47
language tag or a string C<*>.  The language tag must be the primary
language tag only, C<zh-TW>, or C<zh-CN>, otherwise no data is
available.  The tags are ASCII case-insensitive.  If C<*> is
specified, the global default encoding that can be used when the
locale is not known or the locale has no default is returned.

=back

For the purpose of this module, the B<key> of the encoding is a short
string uniquly identifying the encoding.  It is a lowercased variant
of the encoding name defined in the Encoding Standard.

Note that the encoding name in the Encoding Standard is not compatible
with Perl L<Encode> module's encoding names.

There are following functions for encoding and decoding:

=over 4

=item $bytes = encode_web_utf8 $chars

Encode the character string in UTF-8 and return the encoded bytes.

This function corresponds to the "UTF-8 encode" operation of the
Encoding Standard.

=item $chars = decode_web_utf8 $bytes

Decode the bytes as UTF-8 and return the decoded character string.
Any bad byte is replaced by U+FFFD characters without failure.

This function corresponds to the "UTF-8 decode" operation of the
Encoding Standard.

=item $chars = decode_web_utf8_no_bom $bytes

Decode the bytes as UTF-8, not recognizing BOM, and returns the
decoded character string.  Any bad byte is replaced by U+FFFD
characters without failure.

This function corresponds to the "UTF-8 decode without BOM" operation
of the Encoding Standard.

=back

=head1 SPECIFICATIONS

Encoding Standard <https://encoding.spec.whatwg.org/>.

HTML Standard <https://html.spec.whatwg.org/>.

DOM Standard <https://dom.spec.whatwg.org/>.

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2011-2016 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
